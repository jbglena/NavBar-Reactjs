{"version":3,"sources":["components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","toggleMenu","setToggleMenu","window","innerWidth","screenWidth","setScreenWidth","useEffect","changeWidth","addEventListener","removeEventListener","className","onClick","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGe,SAASA,IACtB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,mBAASG,OAAOC,YAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KAqBA,OAdAC,qBAAU,WAER,IAAMC,EAAc,WAClBF,EAAeH,OAAOC,aAKxB,OAFAD,OAAOM,iBAAiB,SAAUD,GAE3B,WACHL,OAAOO,oBAAoB,SAAUF,MAGxC,IAGD,iCACIP,GAAcI,EAAc,MAC9B,qBAAIM,UAAU,OAAd,UACA,oBAAIA,UAAU,QAAd,uBACA,oBAAIA,UAAU,QAAd,sBACA,oBAAIA,UAAU,QAAd,yBAIA,wBAAQC,QA5BM,WAChBV,GAAeD,IA2BeU,UAAU,MAAtC,qB,IClBSE,E,4JAVb,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUG,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c06856c0.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './NavBar.css'\r\n\r\nexport default function Navbar() {\r\n  const [toggleMenu, setToggleMenu] = useState(false)\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n\r\n  const toggleNav = () => {\r\n    setToggleMenu(!toggleMenu)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const changeWidth = () => {\r\n      setScreenWidth(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener('resize', changeWidth)\r\n\r\n    return () => {\r\n        window.removeEventListener('resize', changeWidth)\r\n    }\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <nav>\r\n      {(toggleMenu || screenWidth > 500) && (\r\n      <ul className=\"list\">\r\n      <li className=\"items\">Productos</li>\r\n      <li className=\"items\">Nosotros</li>\r\n      <li className=\"items\">Contacto</li>\r\n    </ul>\r\n      )}\r\n\r\n      <button onClick={toggleNav} className=\"btn\">MENU</button>\r\n    </nav>\r\n  )\r\n}","import React, { Component } from \"react\";\nimport './App.css';\n\n//Components!\nimport './components/NavBar.js'\nimport NavBar from './components/NavBar.js';\n\nclass App extends Component{\n  render(){\n    return(\n      <div className='App'>\n        <NavBar />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}